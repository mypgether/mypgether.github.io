<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[JVM学习-1]]></title>
      <url>http://gether.me/2016/07/JVM%E5%AD%A6%E4%B9%A0-1/</url>
      <content type="html"><![CDATA[<h1 id="jvm参数"><a href="#jvm参数" class="headerlink" title="jvm参数"></a>jvm参数</h1><ol>
<li>-Xmx    Java Heap最大值，默认值为物理内存的1/4；</li>
<li>-Xms    Java Heap初始值，生产机JVM最好将-Xms和-Xmx设为相同值，开发测试机JVM可以保留默认值；</li>
<li>-Xmn    Java Heap Young区大小，不熟悉最好保留默认值；</li>
<li>-Xss      每个线程的Stack大小，不熟悉最好保留默认值；</li>
<li>-XX:PermSize：设定内存的永久保存区域； （java8没有了）</li>
<li>-XX:MaxPermSize：设定最大内存的永久保存区域；</li>
<li>-XX:NewSize：设置JVM堆的‘新生代’的默认大小；</li>
<li>-XX:MaxNewSize：设置JVM堆的‘新生代’的最大大小； </li>
</ol>
<a id="more"></a>
<h1 id="jps"><a href="#jps" class="headerlink" title="jps"></a>jps</h1><blockquote>
<p>Jps命令主要用来查看运行的java进程</p>
</blockquote>
<p>jps -mlv</p>
<h1 id="jstatd"><a href="#jstatd" class="headerlink" title="jstatd"></a>jstatd</h1><blockquote>
<p>待研究</p>
</blockquote>
<h1 id="javap"><a href="#javap" class="headerlink" title="javap"></a>javap</h1><blockquote>
<p>javap主要用来查看java.c文件的源代码</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">javap <span class="_">-l</span> -p -c ConfigServiceImpl</div></pre></td></tr></table></figure>
<ol>
<li>l – 打印行数和局部变量</li>
<li>p – 打印包括非public在内的所有类和成员信息</li>
<li>c – 打印方法字节码(可以不添加)</li>
</ol>
<h1 id="jmap"><a href="#jmap" class="headerlink" title="jmap"></a>jmap</h1><blockquote>
<p>Jmap主要用于打印指定Java进程(或核心文件、远程调试服务器)的共享对象内存映射或堆内存细节。不需要引发OutOfMemoryErrors就可以获取堆dump文件的方法，可以使用jmap生成Heap Dump。然后可以通过Jhat分析。</p>
</blockquote>
<ol>
<li>jmap -dump:live,format=b,file=heap.bin 1354  (sudo su) 其中1354是java进程运行的端口号</li>
<li><p>如果切换了用户出现这样的情况：<br> VMVersionMismatchException: Supported versions are 23.25-b01. Target VM is 24.65-b04<br> 需要执行</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">update-alternatives --get-selections | grep jinfo</div><div class="line">jinfo auto /usr/lib/jvm/java-6-openjdk-amd64/bin/jinfo</div></pre></td></tr></table></figure>
<p> 进行解决 <a href="http://serverfault.duapp.com/questions/653755/jinfo-for-java-7-openjdk-amd64" target="_blank" rel="external">看我得到详细解答</a></p>
</li>
<li>jhat heap.bin</li>
<li>访问<a href="http://localhost:7000" target="_blank" rel="external">http://localhost:7000</a>，即可查看详细内存信息</li>
</ol>
<h1 id="jhat"><a href="#jhat" class="headerlink" title="jhat"></a>jhat</h1><blockquote>
<p>Jhat(Java Heap Analysis Tool)，用于分析java堆得情况的工具。可以分析jmap生成的bin文件，也可以分析hprof文件</p>
</blockquote>
<ol>
<li><p>jvm配置oom的dump文件(catalina.sh)</p>
<p> -XX:+HeapDumpOnOutOfMemoryError  -XX:HeapDumpPath=${目录} </p>
</li>
<li>jhat java_pid5644.hprof 或者 jhat heap.bin</li>
<li>访问<a href="http://localhost:7000" target="_blank" rel="external">http://localhost:7000</a>，即可查看详细内存信息</li>
</ol>
<h1 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h1><blockquote>
<p>Jstack生成当前线程的快照，主要是分析线程死锁，请求长时间等待。出现程序死锁，<strong> hung住非常有必要使用 </strong></p>
</blockquote>
<p>jstack -F 4064 &gt; a.out (4064是当前java进程运行端口)，如果出现cannot open binary file错误，那么就需要切换到启动该java进程的那个用户。<br>vim a.out 就可以看到具体的线程情况啦</p>
<h1 id="jstat"><a href="#jstat" class="headerlink" title="jstat"></a>jstat</h1><blockquote>
<p>实时监控heap size和垃圾回收状况</p>
</blockquote>
<p>jstat -gcutil 17010 250 50   (17010为jvm pid，250表示250毫秒查看一次，50表示持续50次)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[某人的命令]]></title>
      <url>http://gether.me/2016/07/%E6%9F%90%E4%BA%BA%E7%9A%84%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h1 id="空调"><a href="#空调" class="headerlink" title="空调"></a>空调</h1><p><img src="http://pic.58pic.com/58pic/11/31/59/11w58PICszj.jpg" alt="空调1"></p>
<a id="more"></a>
<p><img src="http://img01.taopic.com/150320/240401-1503200QH791.jpg" alt="空调2"></p>
<p><img src="http://img01.taopic.com/150320/240401-1503200S04761.jpg" alt="空调3"></p>
<h1 id="冰箱"><a href="#冰箱" class="headerlink" title="冰箱"></a>冰箱</h1><p><img src="http://img001.hc360.cn/g1/M00/5C/56/wKhQMFIhpNSENq_KAAAAAEGXWiI111.jpg" alt="冰箱1"></p>
<p><img src="http://image3.suning.cn/content/catentries/00000000010231/000000000102317253/fullimage/000000000102317253_8f.jpg" alt="冰箱2"></p>
<p><img src="http://image.suning.cn/images/nrgl/cpjs/101236681_20120911190449.jpg" alt="冰箱3"></p>
<p><img src="http://sc.jb51.net/uploads/allimg/141028/10-14102Q540391F.jpg" alt="冰箱4"></p>
<h1 id="微波炉"><a href="#微波炉" class="headerlink" title="微波炉"></a>微波炉</h1><p><img src="http://vogue.moonbasa.com/files/2011/5/9/14-513460034864.jpg" alt="微波炉1"></p>
<p><img src="http://img01.dwgou.com/efiles/2011-09-14/201109141202500.jpg" alt="微波炉2"></p>
<h1 id="洗衣机"><a href="#洗衣机" class="headerlink" title="洗衣机"></a>洗衣机</h1><p><img src="http://img.wjw.cn/mbr1003/mbr100306081318343244/PicNatural/IMG100306083507390012.jpg" alt="洗衣机1"></p>
<p><img src="http://photocdn.sohu.com/20080630/Img257837369.jpg" alt="洗衣机2"></p>
<p><img src="http://photo.cheaa.com/pic_big/372/372/5000228/100000627.jpg" alt="洗衣机3"></p>
<h1 id="防盗门"><a href="#防盗门" class="headerlink" title="防盗门"></a>防盗门</h1><p><img src="http://img.cn.easthardware.com/upload_images_12/116185/20076131813215800.JPG" alt="防盗门1"></p>
<p><img src="http://news.17house.com/data/attachment/portal/201602/24/121844l607qeq74u7un6lf.png" alt="防盗门2"></p>
]]></content>
    </entry>
    
  
  
</search>
